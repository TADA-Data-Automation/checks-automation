name: PH Check Hourly

# Controls when the workflow will run
on:
  schedule:
    - cron: '00 0-14/2 * * *'
  workflow_dispatch:

jobs:
  get-data:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # install the python version needed

      - name: Create .env file
        run: |
          echo "REDASH_BASE_URL=${{ secrets.REDASH_BASE_URL }}" >> .env
          echo "REDASH_API_KEY=${{ secrets.REDASH_API_KEY }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}" >> .env
          echo "SLACK_CHANNEL=${{ secrets.SLACK_CHANNEL }}" >> .env
          echo "CACHE_CHANNEL=${{ secrets.CACHE_CHANNEL }}" >> .env
          echo "FERNET_KEY=${{ secrets.FERNET_KEY }}" >> .env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: retrieve data
        run: python -m ph_checks.get_data
      
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: get-data
          path: data/car_plates.csv

  run-python-script:
    needs: get-data
    strategy:
      matrix:
        partition: [0,1,2,3,4]

    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # install the python version needed
      
      - name: Install Tesseract-OCR
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr

      - name: Create .env file
        run: |
          echo "PH_URL=${{ secrets.PH_URL }}" >> .env
          echo "FERNET_KEY=${{ secrets.FERNET_KEY }}" >> .env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: get-data
      
      - name: execute py script
        run: python -m ph_checks.check_no_captcha --partition ${{ matrix.partition }}

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: data-${{ matrix.partition }}
          path: data/ph_check_*.csv

  send-to-slack:
    runs-on: ubuntu-latest
    needs: run-python-script
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # install the python version needed

      - name: Create .env file
        run: |
          echo "SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}" >> .env
          echo "SLACK_CHANNEL=${{ secrets.SLACK_CHANNEL }}" >> .env
          echo "CACHE_CHANNEL=${{ secrets.CACHE_CHANNEL }}" >> .env
          echo "FERNET_KEY=${{ secrets.FERNET_KEY }}" >> .env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: download artifacts
        uses: actions/download-artifact@v4
      
      - name: send csv to slack
        run: python -m ph_checks.update
  